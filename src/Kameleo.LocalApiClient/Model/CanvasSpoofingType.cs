/*
 * kameleo-local-api
 *
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: 4.2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Kameleo.LocalApiClient.Client.OpenAPIDateConverter;

namespace Kameleo.LocalApiClient.Model
{
    /// <summary>
    /// Specifies how the canvas will be spoofed. Possible values:  &#39;intelligent&#39;: Use intelligent canvas spoofing. This will result non-unique canvas fingerprints.  &#39;noise&#39;: Add some noise to canvas generation.  &#39;block&#39;: Completely block the 2D API.  &#39;off&#39;: Turn off the spoofing, use the original settings.
    /// </summary>
    /// <value>Specifies how the canvas will be spoofed. Possible values:  &#39;intelligent&#39;: Use intelligent canvas spoofing. This will result non-unique canvas fingerprints.  &#39;noise&#39;: Add some noise to canvas generation.  &#39;block&#39;: Completely block the 2D API.  &#39;off&#39;: Turn off the spoofing, use the original settings.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum CanvasSpoofingType
    {
        /// <summary>
        /// Enum Intelligent for value: intelligent
        /// </summary>
        [EnumMember(Value = "intelligent")]
        Intelligent = 1,

        /// <summary>
        /// Enum Noise for value: noise
        /// </summary>
        [EnumMember(Value = "noise")]
        Noise = 2,

        /// <summary>
        /// Enum Block for value: block
        /// </summary>
        [EnumMember(Value = "block")]
        Block = 3,

        /// <summary>
        /// Enum Off for value: off
        /// </summary>
        [EnumMember(Value = "off")]
        Off = 4
    }

}
