/*
 * kameleo-local-api
 *
 * You can use the following API endpoints to communicate with the local running Kameleo programmatically.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Kameleo.LocalApiClient.Client.OpenAPIDateConverter;

namespace Kameleo.LocalApiClient.Model
{
    /// <summary>
    /// Specifies how the WebGL vendor and renderer will be spoofed. Possible values:  &#39;automatic&#39;: The vendor and renderer values comes from the fingerprint.  &#39;manual&#39;: Manually configure WebGL metadata. For optimal results, choose a video card model similar to your device&#39;s to ensure realistic  profile masking.  &#39;off&#39;: Turn off the spoofing, use the original settings
    /// </summary>
    /// <value>Specifies how the WebGL vendor and renderer will be spoofed. Possible values:  &#39;automatic&#39;: The vendor and renderer values comes from the fingerprint.  &#39;manual&#39;: Manually configure WebGL metadata. For optimal results, choose a video card model similar to your device&#39;s to ensure realistic  profile masking.  &#39;off&#39;: Turn off the spoofing, use the original settings</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum WebglMetaSpoofingType
    {
        /// <summary>
        /// Enum Automatic for value: automatic
        /// </summary>
        [EnumMember(Value = "automatic")]
        Automatic = 1,

        /// <summary>
        /// Enum Manual for value: manual
        /// </summary>
        [EnumMember(Value = "manual")]
        Manual = 2,

        /// <summary>
        /// Enum Off for value: off
        /// </summary>
        [EnumMember(Value = "off")]
        Off = 3
    }

}
